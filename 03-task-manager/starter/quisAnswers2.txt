1. 
The asyncWrapper middleware allows us to avoid redundant functions in our code such as the try/catch blocks used for the controllers in this course.

2. 
const getTask = asyncWrapper(async (req, res, next) => {
  const { id: taskID } = req.params;
  const task = await Task.findOne({_id:taskID});
  if(!task) {
    return next(createCustomError(`No task with id: ${taskID}`, 404))
  }
  res.status(200).json({ task });
}); 